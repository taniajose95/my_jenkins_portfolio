pipeline {
    agent any

    environment {
        DOCKER_CREDENTIALS_ID = credentials('docker-cred-id')
        DOCKER_IMAGE = 'taniajose95/book-api'
        DOCKER_REGISTRY = "${env.DOCKER_REGISTRY}"
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/taniajose95/my_jenkins_portfolio.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('docker_jenkins_pipeline') {
                    script {
                        docker.build("${DOCKER_IMAGE}:${env.BUILD_ID}")
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir('docker_jenkins_pipeline') {
                    script {
                        docker.image("${DOCKER_IMAGE}:${env.BUILD_ID}").inside('-p 8000:8000') { c ->
                            sh 'sleep 5'
                            sh 'python3 -m unittest discover -s . -p "test_app.py"'
                        }
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                dir('docker_jenkins_pipeline') {
                    script {
                        docker.withRegistry("${DOCKER_REGISTRY}", "${DOCKER_CREDENTIALS_ID}") {
                            docker.image("${DOCKER_IMAGE}:${env.BUILD_ID}").push()
                            docker.image("${DOCKER_IMAGE}:${env.BUILD_ID}").push("latest")
                        }
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                dir('docker_jenkins_pipeline') {
                    sh 'docker-compose up -d'
                }
            }
        }
    }
}

